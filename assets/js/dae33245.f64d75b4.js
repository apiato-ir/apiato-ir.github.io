"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8505],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9194:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],p={title:"Code Generator"},l=void 0,s={unversionedId:"core-features/code-generator",id:"version-10.x/core-features/code-generator",isDocsHomePage:!1,title:"Code Generator",description:"- Introduction",source:"@site/versioned_docs/version-10.x/core-features/code-generator.md",sourceDirName:"core-features",slug:"/core-features/code-generator",permalink:"/docs/10.x/core-features/code-generator",editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/core-features/code-generator.md",tags:[],version:"10.x",lastUpdatedBy:"mohammad-alavi",lastUpdatedAt:1631603883,formattedLastUpdatedAt:"9/14/2021",frontMatter:{title:"Code Generator"},sidebar:"version-10.x/docs",previous:{title:"Container Installer",permalink:"/docs/10.x/getting-started/container-installer"},next:{title:"Authentication",permalink:"/docs/10.x/core-features/authentication"}},c=[{value:"Introduction",id:"introduction",children:[]},{value:"Available Code Generator Commands",id:"available-code-generator-commands",children:[]},{value:"Demo",id:"demo",children:[]},{value:"Custom Code Stubs (aka. Customizing the Generator)",id:"custom-code-stubs",children:[]},{value:"Contributing",id:"contributing",children:[]}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#available-code-generator-commands"},"Available Code Generator Commands")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#demo"},"Demo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#custom-code-stubs"},"Custom Code Stubs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#contributing"},"Contributing"))),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Code Generators are a nice way to speed up development by creating boiler-plate code based on your inputs. You may\nalready be familiar with the Laravel code generators (",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan make:controller"),"). "),(0,o.kt)("p",null,"Apiato code generator works the same way. In addition, it can generate a full Container with fully working CRUD operations, including routes, requests, controller, Actions, Repositories, Models, Migrations, documentation.... and much more)"),(0,o.kt)("h2",{id:"available-code-generator-commands"},"Available Code Generator Commands"),(0,o.kt)("p",null,"To see the list of code generators type ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan")," and look for ",(0,o.kt)("inlineCode",{parentName:"p"},"apiato"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'  php artisan apiato:generate:container        Create a Container for apiato from scratch\n  php artisan apiato:generate:action           Create an Action file for a Container\n  php artisan apiato:generate:configuration    Create a Configuration file for a Container\n  php artisan apiato:generate:container:api    Create a Container for apiato from scratch (API Part)\n  php artisan apiato:generate:container:web    Create a Container for apiato from scratch (WEB Part)\n  php artisan apiato:generate:controller       Create a controller for a container\n  php artisan apiato:generate:event            Create a new Event class and its corresponding Handler\n  php artisan apiato:generate:eventhandler     Create a new EventHandler class\n  php artisan apiato:generate:exception        Create a new Exception class\n  php artisan apiato:generate:job              Create a new Job class\n  php artisan apiato:generate:mail             Create a new Mail class\n  php artisan apiato:generate:migration        Create an "empty" migration file for a Container\n  php artisan apiato:generate:model            Create a new Model class\n  php artisan apiato:generate:notification     Create a new Notification class\n  php artisan apiato:generate:readme           Create a README file for a Container\n  php artisan apiato:generate:repository       Create a new Repository class\n  php artisan apiato:generate:request          Create a new Request class\n  php artisan apiato:generate:route            Create a new Route class\n  php artisan apiato:generate:seeder           Create a new Seeder class\n  php artisan apiato:generate:serviceprovider  Create a ServiceProvider for a Container\n  php artisan apiato:generate:subaction        Create a new SubAction class\n  php artisan apiato:generate:task             Create a Task file for a Container\n  php artisan apiato:generate:test:functional  Create a Functional Test file.\n  php artisan apiato:generate:test:testcase    Create the TestCase file.\n  php artisan apiato:generate:test:unit        Create a Unit Test file.\n  php artisan apiato:generate:transformer      Create a new Transformer class for a given Model\n  php artisan apiato:generate:value            Create a new Value class\n')),(0,o.kt)("p",null,"To get more info about each command, add ",(0,o.kt)("inlineCode",{parentName:"p"},"--help")," to the command. Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan apiato:generate:route --help"),". The help page shows all options, which can be directly passed to the command."),(0,o.kt)("p",null,"If you do not provide respective information via the command line options, a wizard will be displayed to guide you through."),(0,o.kt)("p",null,"For example, you can directly call ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan apiato:generate:controller --file=UserController")," to directly specify the class\nto be generated. The wizard, however, will ask you for the ",(0,o.kt)("inlineCode",{parentName:"p"},"--section")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--container")," as well."),(0,o.kt)("p",null,"Note that ",(0,o.kt)("strong",{parentName:"p"},"all")," generators automatically inherit the options ",(0,o.kt)("inlineCode",{parentName:"p"},"--section"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"--container")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--file")," (these are documented\nas well in the help page). Furthermore, a generator may have specific options as well (e.g., the ",(0,o.kt)("inlineCode",{parentName:"p"},"--ui")," (user-interface)\nto generate something for)."),(0,o.kt)("h2",{id:"demo"},"Demo"),(0,o.kt)("h4",{id:"generating-a-route-endpoint-file"},"Generating a Route (endpoint) file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"$ php artisan apiato:generate:route\n\n Enter the name of the Section [AppSection]:\n >\n\n Enter the name of the Container:\n > Car\n\n Enter the name of the Route file [DefaultRoute]:\n > CreateCar\n\n> Generating (CreateCar) in (AppSection:Car) Container.\n\n Select the UI for the controller [API]:\n  [0] API\n  [1] WEB\n > 0\n\n Enter the endpoint version (integer)[1]:\n > 1\n\n Select the type for this endpoint?[private]:\n  [0] private\n  [1] public\n > 1\n\n Enter the name of the controller function that needs to be invoked when calling this endpoint:\n > createNewCar\n\n Enter the HTTP verb of this endpoint (GET, POST,...):\n > POST\n\n Enter the endpoint URI (foo/bar/{id}):\n > cars\n\nRoute generated successfully.\n\n")),(0,o.kt)("h4",{id:"result"},"Result"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"CreateCar.v1.public.php")," file will be created in ",(0,o.kt)("inlineCode",{parentName:"p"},"App\\Containers\\AppSection\\Car\\UI\\API\\Routes\\")),(0,o.kt)("h2",{id:"custom-code-stubs"},"Custom Code Stubs (aka. Customizing the Generator)"),(0,o.kt)("p",null,"If you don't like the automatically generated code (or would like to adapt it to your specific needs) you can do this quite easily."),(0,o.kt)("p",null,"The existing ",(0,o.kt)("inlineCode",{parentName:"p"},"Generators")," allow to read ",(0,o.kt)("inlineCode",{parentName:"p"},"custom stubs")," from the ",(0,o.kt)("inlineCode",{parentName:"p"},"app/Ship/Generators/CustomStubs")," folder. The name of\nthe file and the folder structure needs to be the same as in ",(0,o.kt)("inlineCode",{parentName:"p"},"vendor/apiato/core/Generator/Stubs"),"."),(0,o.kt)("p",null,"Say, if you like to change the ",(0,o.kt)("inlineCode",{parentName:"p"},"action")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"create.stub"),", simply copy the file to ",(0,o.kt)("inlineCode",{parentName:"p"},"app/Ship/Generators/CustomStubs/actions/create.stub")," and\nstart adapting it to your needs."),(0,o.kt)("p",null,"If you run the respective command (e.g., in this case ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan apiato:generate:action"),") and choose ",(0,o.kt)("inlineCode",{parentName:"p"},"Create")," type\nthis would read your specific ",(0,o.kt)("inlineCode",{parentName:"p"},"create.stub")," file instead of the pre-defined one!"),(0,o.kt)("h2",{id:"contributing"},"Contributing"),(0,o.kt)("p",null,"If you would like to add your own generators, please check out the ",(0,o.kt)("a",{parentName:"p",href:"../contribution-guide"},"Contribution Guide"),"."))}d.isMDXComponent=!0}}]);