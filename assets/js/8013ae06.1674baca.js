"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4773],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(h,i(i({ref:n},s),{},{components:t})):r.createElement(h,i({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},421:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],p={title:"Exceptions"},l=void 0,c={unversionedId:"main-components/exceptions",id:"version-10.x/main-components/exceptions",isDocsHomePage:!1,title:"Exceptions",description:"* Definition & Principles",source:"@site/versioned_docs/version-10.x/main-components/exceptions.md",sourceDirName:"main-components",slug:"/main-components/exceptions",permalink:"/docs/10.x/main-components/exceptions",editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/main-components/exceptions.md",tags:[],version:"10.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1619394104,formattedLastUpdatedAt:"4/25/2021",frontMatter:{title:"Exceptions"},sidebar:"version-10.x/docs",previous:{title:"Transformers",permalink:"/docs/10.x/main-components/transformers"},next:{title:"Sub Actions",permalink:"/docs/10.x/main-components/subactions"}},s=[{value:"Definition &amp; Principles",id:"definition-principles",children:[]},{value:"Rules",id:"rules",children:[]},{value:"Folder Structure",id:"folder-structure",children:[]},{value:"Code Samples",id:"code-samples",children:[]}],u={toc:s};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#principles"},"Principles")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#rules"},"Rules")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#code-samples"},"Code Samples"))),(0,o.kt)("h3",{id:"definition-principles"},"Definition & Principles"),(0,o.kt)("p",null,"Read ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Exceptions"},(0,o.kt)("strong",{parentName:"a"},"Porto SAP Documentation (#Exceptions)")),"."),(0,o.kt)("h3",{id:"rules"},"Rules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All Exceptions MUST extend ",(0,o.kt)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Exceptions\\Exception"),"."),(0,o.kt)("li",{parentName:"ul"},"Shared (general) Exceptions between all Containers SHOULD be created in the ",(0,o.kt)("strong",{parentName:"li"},"Exceptions Ship")," folder (",(0,o.kt)("inlineCode",{parentName:"li"},"app/Ship/Exceptions/*"),")."),(0,o.kt)("li",{parentName:"ul"},"Every Exception SHOULD have two properties ",(0,o.kt)("inlineCode",{parentName:"li"},"code")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"message"),". You can override those values while throwing the error.")),(0,o.kt)("h3",{id:"folder-structure"},"Folder Structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," - App\n    - Containers\n        - {section-name}\n            - {container-name}\n                - Exceptions\n                    - AccountFailedException.php\n                    - ...\n\n    - Ship\n        - Exceptions\n            - CreateResourceFailedException.php\n            - NotFoundException.php\n            - ...\n")),(0,o.kt)("h3",{id:"code-samples"},"Code Samples"),(0,o.kt)("h4",{id:"demo-exception"},"Demo Exception"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"class DemoException extends Exception\n{\n    public $code = Response::HTTP_CONFLICT;\n    public $message = 'This is a demo exception.';\n}\n")),(0,o.kt)("h4",{id:"usage-from-anywhere"},"Usage from anywhere"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException();\n")),(0,o.kt)("h4",{id:"usage-with-errors"},"Usage with errors"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->withErrors(['email' => 'Email already in use']);\nthrow (new AccountFailedException())->withErrors(['email' => ['Email already in use', 'Another message']]);\n")),(0,o.kt)("h4",{id:"usage-with-errors-and-localization"},"Usage with errors and localization"),(0,o.kt)("p",null,"For localization, you can use the ",(0,o.kt)("a",{parentName:"p",href:"../additional-features/apiato-containers/localization"},"Localization Container")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"// translation strings are automatically translated if the translations are found.\nthrow (new AccountFailedException())->withErrors(['email' => 'appSection@user::exceptions.email-taken']);\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The exception error message.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ]\n  }\n}\n')),(0,o.kt)("h4",{id:"usage-with-log-for-debugging"},"Usage with Log for Debugging"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->debug($e); // debug() accepts string or \\Exception instance\n")),(0,o.kt)("h4",{id:"usage-and-overriding-the-default"},"Usage and overriding the default"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException('I am the message to be displayed to the user');\n")))}m.isMDXComponent=!0}}]);