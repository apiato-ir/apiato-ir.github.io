"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3616],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7889:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={title:"Validation"},l=void 0,u={unversionedId:"core-features/validation",id:"version-10.x/core-features/validation",isDocsHomePage:!1,title:"Validation",description:"Apiato uses the powerful Laravel validation system.",source:"@site/versioned_docs/version-10.x/core-features/validation.md",sourceDirName:"core-features",slug:"/core-features/validation",permalink:"/docs/10.x/core-features/validation",editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/core-features/validation.md",tags:[],version:"10.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1619394104,formattedLastUpdatedAt:"4/25/2021",frontMatter:{title:"Validation"},sidebar:"version-10.x/docs",previous:{title:"API Versioning",permalink:"/docs/10.x/core-features/api-versioning"},next:{title:"ETag",permalink:"/docs/10.x/core-features/etag"}},p=[{value:"Responses",id:"responses",children:[]}],c={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Apiato uses the powerful ",(0,o.kt)("a",{parentName:"p",href:"https://laravel.com/docs/validation"},"Laravel validation")," system."),(0,o.kt)("p",null,"In Apiato, validation must be defined in ",(0,o.kt)("a",{parentName:"p",href:"../main-components/requests"},"Request")," component, since every request might have different rules."),(0,o.kt)("p",null,"Validation rules are automatically applied, once injecting the Request in the Controller."),(0,o.kt)("p",null,"Requests help validating User data, accessibility, ownership and more."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example Request with Validation rules:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"namespace App\\Containers\\AppSection\\User\\UI\\API\\Requests;\n\nuse App\\Ship\\Parents\\Requests\\Request;\n\nclass RegisterUserRequest extends Request\n{\n    /**\n     * @return  array\n     */\n    public function rules()\n    {\n        return [\n            'email'    => 'required|email|max:200|unique:users,email',\n            'password' => 'required|min:20|max:300',\n            'name'     => 'required|min:2|max:400',\n        ];\n    }\n\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Usage from Controller Example:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"    public function registerUser(RegisterUserRequest $request)\n    {\n        $user = app(RegisterUserAction::class)->run($request);\n        return $this->transform($user, UserTransformer::class);\n    }\n")),(0,o.kt)("h2",{id:"responses"},"Responses"),(0,o.kt)("p",null,"Validation Error response format:"),(0,o.kt)("p",null,"Single Field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The given data was invalid.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Multiple Fields:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The given data was invalid.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ],\n    "password": [\n      "The password field is required."\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"More details about requests in the ",(0,o.kt)("a",{parentName:"p",href:"../main-components/requests"},"Requests")," Page."))}d.isMDXComponent=!0}}]);